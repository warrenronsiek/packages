/**********************************************************************
 * Extern for Draft
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Draft = {
  "AtomicBlockUtils": {
    "insertAtomicBlock": function () {},
    "moveAtomicBlock": function () {}
  },
  "BlockMapBuilder": {
    "createFromArray": function () {}
  },
  "CharacterMetadata": {
    "EMPTY": {
      "@@__IMMUTABLE_ITERABLE__@@": {},
      "@@__IMMUTABLE_KEYED__@@": {},
      "__ensureOwner": function () {},
      "__iterate": function () {},
      "__iterator": function () {},
      "__toJS": function () {},
      "__toString": function () {},
      "__toStringMapper": function () {},
      "_defaultValues": {
        "entity": {},
        "style": {
          "@@__IMMUTABLE_ITERABLE__@@": {},
          "@@__IMMUTABLE_ORDERED__@@": {},
          "@@__IMMUTABLE_SET__@@": {},
          "__empty": function () {},
          "__ensureOwner": function () {},
          "__iterate": function () {},
          "__iterator": function () {},
          "__make": function () {},
          "__ownerID": {},
          "__toJS": function () {},
          "__toString": function () {},
          "__toStringMapper": function () {},
          "_map": {
            "@@__IMMUTABLE_ITERABLE__@@": {},
            "@@__IMMUTABLE_KEYED__@@": {},
            "@@__IMMUTABLE_MAP__@@": {},
            "@@__IMMUTABLE_ORDERED__@@": {},
            "__ensureOwner": function () {},
            "__hash": {},
            "__iterate": function () {},
            "__iterator": function () {},
            "__ownerID": {},
            "__toJS": function () {},
            "__toString": function () {},
            "__toStringMapper": function () {},
            "_list": {
              "@@__IMMUTABLE_INDEXED__@@": {},
              "@@__IMMUTABLE_ITERABLE__@@": {},
              "@@__IMMUTABLE_LIST__@@": {},
              "@@__IMMUTABLE_ORDERED__@@": {},
              "__altered": {},
              "__ensureOwner": function () {},
              "__hash": {},
              "__iterate": function () {},
              "__iterator": function () {},
              "__ownerID": {},
              "__toJS": function () {},
              "__toString": function () {},
              "__toStringMapper": function () {},
              "_capacity": {},
              "_level": {},
              "_origin": {},
              "_root": {},
              "_tail": {},
              "asImmutable": function () {},
              "asMutable": function () {},
              "butLast": function () {},
              "chain": function () {},
              "clear": function () {},
              "concat": function () {},
              "constructor": {
                "isList": function () {},
                "of": function () {}
              },
              "contains": function () {},
              "count": function () {},
              "countBy": function () {},
              "delete": function () {},
              "deleteIn": function () {},
              "entries": function () {},
              "entrySeq": function () {},
              "equals": function () {},
              "every": function () {},
              "filter": function () {},
              "filterNot": function () {},
              "find": function () {},
              "findEntry": function () {},
              "findIndex": function () {},
              "findKey": function () {},
              "findLast": function () {},
              "findLastEntry": function () {},
              "findLastIndex": function () {},
              "findLastKey": function () {},
              "first": function () {},
              "flatMap": function () {},
              "flatten": function () {},
              "forEach": function () {},
              "fromEntrySeq": function () {},
              "get": function () {},
              "getIn": function () {},
              "groupBy": function () {},
              "has": function () {},
              "hasIn": function () {},
              "hashCode": function () {},
              "includes": function () {},
              "indexOf": function () {},
              "insert": function () {},
              "inspect": function () {},
              "interleave": function () {},
              "interpose": function () {},
              "isEmpty": function () {},
              "isSubset": function () {},
              "isSuperset": function () {},
              "join": function () {},
              "keyOf": function () {},
              "keySeq": function () {},
              "keys": function () {},
              "last": function () {},
              "lastIndexOf": function () {},
              "lastKeyOf": function () {},
              "map": function () {},
              "max": function () {},
              "maxBy": function () {},
              "merge": function () {},
              "mergeDeep": function () {},
              "mergeDeepIn": function () {},
              "mergeDeepWith": function () {},
              "mergeIn": function () {},
              "mergeWith": function () {},
              "min": function () {},
              "minBy": function () {},
              "pop": function () {},
              "push": function () {},
              "reduce": function () {},
              "reduceRight": function () {},
              "remove": function () {},
              "removeIn": function () {},
              "rest": function () {},
              "reverse": function () {},
              "set": function () {},
              "setIn": function () {},
              "setSize": function () {},
              "shift": function () {},
              "size": {},
              "skip": function () {},
              "skipLast": function () {},
              "skipUntil": function () {},
              "skipWhile": function () {},
              "slice": function () {},
              "some": function () {},
              "sort": function () {},
              "sortBy": function () {},
              "splice": function () {},
              "take": function () {},
              "takeLast": function () {},
              "takeUntil": function () {},
              "takeWhile": function () {},
              "toArray": function () {},
              "toIndexedSeq": function () {},
              "toJS": function () {},
              "toJSON": function () {},
              "toKeyedSeq": function () {},
              "toList": function () {},
              "toMap": function () {},
              "toObject": function () {},
              "toOrderedMap": function () {},
              "toOrderedSet": function () {},
              "toSeq": function () {},
              "toSet": function () {},
              "toSetSeq": function () {},
              "toSource": function () {},
              "toStack": function () {},
              "toString": function () {},
              "unshift": function () {},
              "update": function () {},
              "updateIn": function () {},
              "valueSeq": function () {},
              "values": function () {},
              "wasAltered": function () {},
              "withMutations": function () {},
              "zip": function () {},
              "zipWith": function () {}
            },
            "_map": {
              "@@__IMMUTABLE_ITERABLE__@@": {},
              "@@__IMMUTABLE_KEYED__@@": {},
              "@@__IMMUTABLE_MAP__@@": {},
              "__altered": {},
              "__ensureOwner": function () {},
              "__hash": {},
              "__iterate": function () {},
              "__iterator": function () {},
              "__ownerID": {},
              "__toJS": function () {},
              "__toString": function () {},
              "__toStringMapper": function () {},
              "_root": {},
              "asImmutable": function () {},
              "asMutable": function () {},
              "butLast": function () {},
              "chain": function () {},
              "clear": function () {},
              "concat": function () {},
              "constructor": {
                "isMap": function () {},
                "of": function () {}
              },
              "contains": function () {},
              "count": function () {},
              "countBy": function () {},
              "delete": function () {},
              "deleteIn": function () {},
              "entries": function () {},
              "entrySeq": function () {},
              "equals": function () {},
              "every": function () {},
              "filter": function () {},
              "filterNot": function () {},
              "find": function () {},
              "findEntry": function () {},
              "findKey": function () {},
              "findLast": function () {},
              "findLastEntry": function () {},
              "findLastKey": function () {},
              "first": function () {},
              "flatMap": function () {},
              "flatten": function () {},
              "flip": function () {},
              "forEach": function () {},
              "fromEntrySeq": function () {},
              "get": function () {},
              "getIn": function () {},
              "groupBy": function () {},
              "has": function () {},
              "hasIn": function () {},
              "hashCode": function () {},
              "includes": function () {},
              "inspect": function () {},
              "isEmpty": function () {},
              "isSubset": function () {},
              "isSuperset": function () {},
              "join": function () {},
              "keyOf": function () {},
              "keySeq": function () {},
              "keys": function () {},
              "last": function () {},
              "lastKeyOf": function () {},
              "map": function () {},
              "mapEntries": function () {},
              "mapKeys": function () {},
              "max": function () {},
              "maxBy": function () {},
              "merge": function () {},
              "mergeDeep": function () {},
              "mergeDeepIn": function () {},
              "mergeDeepWith": function () {},
              "mergeIn": function () {},
              "mergeWith": function () {},
              "min": function () {},
              "minBy": function () {},
              "reduce": function () {},
              "reduceRight": function () {},
              "remove": function () {},
              "removeIn": function () {},
              "rest": function () {},
              "reverse": function () {},
              "set": function () {},
              "setIn": function () {},
              "size": {},
              "skip": function () {},
              "skipLast": function () {},
              "skipUntil": function () {},
              "skipWhile": function () {},
              "slice": function () {},
              "some": function () {},
              "sort": function () {},
              "sortBy": function () {},
              "take": function () {},
              "takeLast": function () {},
              "takeUntil": function () {},
              "takeWhile": function () {},
              "toArray": function () {},
              "toIndexedSeq": function () {},
              "toJS": function () {},
              "toJSON": function () {},
              "toKeyedSeq": function () {},
              "toList": function () {},
              "toMap": function () {},
              "toObject": function () {},
              "toOrderedMap": function () {},
              "toOrderedSet": function () {},
              "toSeq": function () {},
              "toSet": function () {},
              "toSetSeq": function () {},
              "toSource": function () {},
              "toStack": function () {},
              "toString": function () {},
              "update": function () {},
              "updateIn": function () {},
              "valueSeq": function () {},
              "values": function () {},
              "wasAltered": function () {},
              "withMutations": function () {}
            },
            "asImmutable": function () {},
            "asMutable": function () {},
            "butLast": function () {},
            "chain": function () {},
            "clear": function () {},
            "concat": function () {},
            "constructor": {
              "isOrderedMap": function () {},
              "of": function () {}
            },
            "contains": function () {},
            "count": function () {},
            "countBy": function () {},
            "delete": function () {},
            "deleteIn": function () {},
            "entries": function () {},
            "entrySeq": function () {},
            "equals": function () {},
            "every": function () {},
            "filter": function () {},
            "filterNot": function () {},
            "find": function () {},
            "findEntry": function () {},
            "findKey": function () {},
            "findLast": function () {},
            "findLastEntry": function () {},
            "findLastKey": function () {},
            "first": function () {},
            "flatMap": function () {},
            "flatten": function () {},
            "flip": function () {},
            "forEach": function () {},
            "fromEntrySeq": function () {},
            "get": function () {},
            "getIn": function () {},
            "groupBy": function () {},
            "has": function () {},
            "hasIn": function () {},
            "hashCode": function () {},
            "includes": function () {},
            "inspect": function () {},
            "isEmpty": function () {},
            "isSubset": function () {},
            "isSuperset": function () {},
            "join": function () {},
            "keyOf": function () {},
            "keySeq": function () {},
            "keys": function () {},
            "last": function () {},
            "lastKeyOf": function () {},
            "map": function () {},
            "mapEntries": function () {},
            "mapKeys": function () {},
            "max": function () {},
            "maxBy": function () {},
            "merge": function () {},
            "mergeDeep": function () {},
            "mergeDeepIn": function () {},
            "mergeDeepWith": function () {},
            "mergeIn": function () {},
            "mergeWith": function () {},
            "min": function () {},
            "minBy": function () {},
            "reduce": function () {},
            "reduceRight": function () {},
            "remove": function () {},
            "removeIn": function () {},
            "rest": function () {},
            "reverse": function () {},
            "set": function () {},
            "setIn": function () {},
            "size": {},
            "skip": function () {},
            "skipLast": function () {},
            "skipUntil": function () {},
            "skipWhile": function () {},
            "slice": function () {},
            "some": function () {},
            "sort": function () {},
            "sortBy": function () {},
            "take": function () {},
            "takeLast": function () {},
            "takeUntil": function () {},
            "takeWhile": function () {},
            "toArray": function () {},
            "toIndexedSeq": function () {},
            "toJS": function () {},
            "toJSON": function () {},
            "toKeyedSeq": function () {},
            "toList": function () {},
            "toMap": function () {},
            "toObject": function () {},
            "toOrderedMap": function () {},
            "toOrderedSet": function () {},
            "toSeq": function () {},
            "toSet": function () {},
            "toSetSeq": function () {},
            "toSource": function () {},
            "toStack": function () {},
            "toString": function () {},
            "update": function () {},
            "updateIn": function () {},
            "valueSeq": function () {},
            "values": function () {},
            "wasAltered": function () {},
            "withMutations": function () {}
          },
          "add": function () {},
          "asImmutable": function () {},
          "asMutable": function () {},
          "butLast": function () {},
          "chain": function () {},
          "clear": function () {},
          "concat": function () {},
          "constructor": {
            "fromKeys": function () {},
            "isOrderedSet": function () {},
            "of": function () {}
          },
          "contains": function () {},
          "count": function () {},
          "countBy": function () {},
          "delete": function () {},
          "entries": function () {},
          "entrySeq": function () {},
          "equals": function () {},
          "every": function () {},
          "filter": function () {},
          "filterNot": function () {},
          "find": function () {},
          "findEntry": function () {},
          "findKey": function () {},
          "findLast": function () {},
          "findLastEntry": function () {},
          "findLastKey": function () {},
          "first": function () {},
          "flatMap": function () {},
          "flatten": function () {},
          "forEach": function () {},
          "fromEntrySeq": function () {},
          "get": function () {},
          "getIn": function () {},
          "groupBy": function () {},
          "has": function () {},
          "hasIn": function () {},
          "hashCode": function () {},
          "includes": function () {},
          "inspect": function () {},
          "intersect": function () {},
          "isEmpty": function () {},
          "isSubset": function () {},
          "isSuperset": function () {},
          "join": function () {},
          "keyOf": function () {},
          "keySeq": function () {},
          "keys": function () {},
          "last": function () {},
          "lastKeyOf": function () {},
          "map": function () {},
          "max": function () {},
          "maxBy": function () {},
          "merge": function () {},
          "mergeDeep": function () {},
          "mergeDeepWith": function () {},
          "mergeWith": function () {},
          "min": function () {},
          "minBy": function () {},
          "reduce": function () {},
          "reduceRight": function () {},
          "remove": function () {},
          "rest": function () {},
          "reverse": function () {},
          "size": {},
          "skip": function () {},
          "skipLast": function () {},
          "skipUntil": function () {},
          "skipWhile": function () {},
          "slice": function () {},
          "some": function () {},
          "sort": function () {},
          "sortBy": function () {},
          "subtract": function () {},
          "take": function () {},
          "takeLast": function () {},
          "takeUntil": function () {},
          "takeWhile": function () {},
          "toArray": function () {},
          "toIndexedSeq": function () {},
          "toJS": function () {},
          "toJSON": function () {},
          "toKeyedSeq": function () {},
          "toList": function () {},
          "toMap": function () {},
          "toObject": function () {},
          "toOrderedMap": function () {},
          "toOrderedSet": function () {},
          "toSeq": function () {},
          "toSet": function () {},
          "toSetSeq": function () {},
          "toSource": function () {},
          "toStack": function () {},
          "toString": function () {},
          "union": function () {},
          "valueSeq": function () {},
          "values": function () {},
          "wasAltered": function () {},
          "withMutations": function () {}
        }
      },
      "_keys": {},
      "_map": {
        "@@__IMMUTABLE_ITERABLE__@@": {},
        "@@__IMMUTABLE_KEYED__@@": {},
        "@@__IMMUTABLE_MAP__@@": {},
        "__altered": {},
        "__ensureOwner": function () {},
        "__hash": {},
        "__iterate": function () {},
        "__iterator": function () {},
        "__ownerID": {},
        "__toJS": function () {},
        "__toString": function () {},
        "__toStringMapper": function () {},
        "_root": {},
        "asImmutable": function () {},
        "asMutable": function () {},
        "butLast": function () {},
        "chain": function () {},
        "clear": function () {},
        "concat": function () {},
        "constructor": {
          "isMap": function () {},
          "of": function () {}
        },
        "contains": function () {},
        "count": function () {},
        "countBy": function () {},
        "delete": function () {},
        "deleteIn": function () {},
        "entries": function () {},
        "entrySeq": function () {},
        "equals": function () {},
        "every": function () {},
        "filter": function () {},
        "filterNot": function () {},
        "find": function () {},
        "findEntry": function () {},
        "findKey": function () {},
        "findLast": function () {},
        "findLastEntry": function () {},
        "findLastKey": function () {},
        "first": function () {},
        "flatMap": function () {},
        "flatten": function () {},
        "flip": function () {},
        "forEach": function () {},
        "fromEntrySeq": function () {},
        "get": function () {},
        "getIn": function () {},
        "groupBy": function () {},
        "has": function () {},
        "hasIn": function () {},
        "hashCode": function () {},
        "includes": function () {},
        "inspect": function () {},
        "isEmpty": function () {},
        "isSubset": function () {},
        "isSuperset": function () {},
        "join": function () {},
        "keyOf": function () {},
        "keySeq": function () {},
        "keys": function () {},
        "last": function () {},
        "lastKeyOf": function () {},
        "map": function () {},
        "mapEntries": function () {},
        "mapKeys": function () {},
        "max": function () {},
        "maxBy": function () {},
        "merge": function () {},
        "mergeDeep": function () {},
        "mergeDeepIn": function () {},
        "mergeDeepWith": function () {},
        "mergeIn": function () {},
        "mergeWith": function () {},
        "min": function () {},
        "minBy": function () {},
        "reduce": function () {},
        "reduceRight": function () {},
        "remove": function () {},
        "removeIn": function () {},
        "rest": function () {},
        "reverse": function () {},
        "set": function () {},
        "setIn": function () {},
        "size": {},
        "skip": function () {},
        "skipLast": function () {},
        "skipUntil": function () {},
        "skipWhile": function () {},
        "slice": function () {},
        "some": function () {},
        "sort": function () {},
        "sortBy": function () {},
        "take": function () {},
        "takeLast": function () {},
        "takeUntil": function () {},
        "takeWhile": function () {},
        "toArray": function () {},
        "toIndexedSeq": function () {},
        "toJS": function () {},
        "toJSON": function () {},
        "toKeyedSeq": function () {},
        "toList": function () {},
        "toMap": function () {},
        "toObject": function () {},
        "toOrderedMap": function () {},
        "toOrderedSet": function () {},
        "toSeq": function () {},
        "toSet": function () {},
        "toSetSeq": function () {},
        "toSource": function () {},
        "toStack": function () {},
        "toString": function () {},
        "update": function () {},
        "updateIn": function () {},
        "valueSeq": function () {},
        "values": function () {},
        "wasAltered": function () {},
        "withMutations": function () {}
      },
      "_name": {},
      "asImmutable": function () {},
      "asMutable": function () {},
      "butLast": function () {},
      "chain": function () {},
      "clear": function () {},
      "concat": function () {},
      "constructor": function () {},
      "contains": function () {},
      "count": function () {},
      "countBy": function () {},
      "delete": function () {},
      "deleteIn": function () {},
      "entries": function () {},
      "entrySeq": function () {},
      "equals": function () {},
      "every": function () {},
      "filter": function () {},
      "filterNot": function () {},
      "find": function () {},
      "findEntry": function () {},
      "findKey": function () {},
      "findLast": function () {},
      "findLastEntry": function () {},
      "findLastKey": function () {},
      "first": function () {},
      "flatMap": function () {},
      "flatten": function () {},
      "flip": function () {},
      "forEach": function () {},
      "fromEntrySeq": function () {},
      "get": function () {},
      "getEntity": function () {},
      "getIn": function () {},
      "getStyle": function () {},
      "groupBy": function () {},
      "has": function () {},
      "hasIn": function () {},
      "hasStyle": function () {},
      "hashCode": function () {},
      "includes": function () {},
      "inspect": function () {},
      "isEmpty": function () {},
      "isSubset": function () {},
      "isSuperset": function () {},
      "join": function () {},
      "keyOf": function () {},
      "keySeq": function () {},
      "keys": function () {},
      "last": function () {},
      "lastKeyOf": function () {},
      "map": function () {},
      "mapEntries": function () {},
      "mapKeys": function () {},
      "max": function () {},
      "maxBy": function () {},
      "merge": function () {},
      "mergeDeep": function () {},
      "mergeDeepIn": function () {},
      "mergeDeepWith": function () {},
      "mergeIn": function () {},
      "mergeWith": function () {},
      "min": function () {},
      "minBy": function () {},
      "reduce": function () {},
      "reduceRight": function () {},
      "remove": function () {},
      "removeIn": function () {},
      "rest": function () {},
      "reverse": function () {},
      "set": function () {},
      "setIn": function () {},
      "size": {},
      "skip": function () {},
      "skipLast": function () {},
      "skipUntil": function () {},
      "skipWhile": function () {},
      "slice": function () {},
      "some": function () {},
      "sort": function () {},
      "sortBy": function () {},
      "take": function () {},
      "takeLast": function () {},
      "takeUntil": function () {},
      "takeWhile": function () {},
      "toArray": function () {},
      "toIndexedSeq": function () {},
      "toJS": function () {},
      "toJSON": function () {},
      "toKeyedSeq": function () {},
      "toList": function () {},
      "toMap": function () {},
      "toObject": function () {},
      "toOrderedMap": function () {},
      "toOrderedSet": function () {},
      "toSeq": function () {},
      "toSet": function () {},
      "toSetSeq": function () {},
      "toSource": function () {},
      "toStack": function () {},
      "toString": function () {},
      "update": function () {},
      "updateIn": function () {},
      "valueSeq": function () {},
      "values": function () {},
      "wasAltered": function () {},
      "withMutations": function () {}
    },
    "applyEntity": function () {},
    "applyStyle": function () {},
    "create": function () {},
    "fromJS": function () {},
    "removeStyle": function () {}
  },
  "CompositeDecorator": function () {},
  "ContentBlock": function () {},
  "ContentState": {
    "createContentBlockFromJS": function () {},
    "createFromBlockArray": function () {},
    "createFromText": function () {},
    "fromJS": function () {}
  },
  "DefaultDraftBlockRenderMap": {
    "@@__IMMUTABLE_ITERABLE__@@": {},
    "@@__IMMUTABLE_KEYED__@@": {},
    "@@__IMMUTABLE_MAP__@@": {},
    "__altered": {},
    "__ensureOwner": function () {},
    "__hash": {},
    "__iterate": function () {},
    "__iterator": function () {},
    "__ownerID": {},
    "__toJS": function () {},
    "__toString": function () {},
    "__toStringMapper": function () {},
    "_root": {
      "bitmap": {},
      "get": function () {},
      "iterate": function () {},
      "nodes": {},
      "ownerID": {},
      "update": function () {}
    },
    "asImmutable": function () {},
    "asMutable": function () {},
    "butLast": function () {},
    "chain": function () {},
    "clear": function () {},
    "concat": function () {},
    "constructor": {
      "isMap": function () {},
      "of": function () {}
    },
    "contains": function () {},
    "count": function () {},
    "countBy": function () {},
    "delete": function () {},
    "deleteIn": function () {},
    "entries": function () {},
    "entrySeq": function () {},
    "equals": function () {},
    "every": function () {},
    "filter": function () {},
    "filterNot": function () {},
    "find": function () {},
    "findEntry": function () {},
    "findKey": function () {},
    "findLast": function () {},
    "findLastEntry": function () {},
    "findLastKey": function () {},
    "first": function () {},
    "flatMap": function () {},
    "flatten": function () {},
    "flip": function () {},
    "forEach": function () {},
    "fromEntrySeq": function () {},
    "get": function () {},
    "getIn": function () {},
    "groupBy": function () {},
    "has": function () {},
    "hasIn": function () {},
    "hashCode": function () {},
    "includes": function () {},
    "inspect": function () {},
    "isEmpty": function () {},
    "isSubset": function () {},
    "isSuperset": function () {},
    "join": function () {},
    "keyOf": function () {},
    "keySeq": function () {},
    "keys": function () {},
    "last": function () {},
    "lastKeyOf": function () {},
    "map": function () {},
    "mapEntries": function () {},
    "mapKeys": function () {},
    "max": function () {},
    "maxBy": function () {},
    "merge": function () {},
    "mergeDeep": function () {},
    "mergeDeepIn": function () {},
    "mergeDeepWith": function () {},
    "mergeIn": function () {},
    "mergeWith": function () {},
    "min": function () {},
    "minBy": function () {},
    "reduce": function () {},
    "reduceRight": function () {},
    "remove": function () {},
    "removeIn": function () {},
    "rest": function () {},
    "reverse": function () {},
    "set": function () {},
    "setIn": function () {},
    "size": {},
    "skip": function () {},
    "skipLast": function () {},
    "skipUntil": function () {},
    "skipWhile": function () {},
    "slice": function () {},
    "some": function () {},
    "sort": function () {},
    "sortBy": function () {},
    "take": function () {},
    "takeLast": function () {},
    "takeUntil": function () {},
    "takeWhile": function () {},
    "toArray": function () {},
    "toIndexedSeq": function () {},
    "toJS": function () {},
    "toJSON": function () {},
    "toKeyedSeq": function () {},
    "toList": function () {},
    "toMap": function () {},
    "toObject": function () {},
    "toOrderedMap": function () {},
    "toOrderedSet": function () {},
    "toSeq": function () {},
    "toSet": function () {},
    "toSetSeq": function () {},
    "toSource": function () {},
    "toStack": function () {},
    "toString": function () {},
    "update": function () {},
    "updateIn": function () {},
    "valueSeq": function () {},
    "values": function () {},
    "wasAltered": function () {},
    "withMutations": function () {}
  },
  "DefaultDraftInlineStyle": {
    "BOLD": {
      "fontWeight": {}
    },
    "CODE": {
      "fontFamily": {},
      "wordWrap": {}
    },
    "ITALIC": {
      "fontStyle": {}
    },
    "STRIKETHROUGH": {
      "textDecoration": {}
    },
    "UNDERLINE": {
      "textDecoration": {}
    }
  },
  "Editor": {
    "defaultProps": {
      "ariaDescribedBy": {},
      "blockRenderMap": {
        "@@__IMMUTABLE_ITERABLE__@@": {},
        "@@__IMMUTABLE_KEYED__@@": {},
        "@@__IMMUTABLE_MAP__@@": {},
        "__altered": {},
        "__ensureOwner": function () {},
        "__hash": {},
        "__iterate": function () {},
        "__iterator": function () {},
        "__ownerID": {},
        "__toJS": function () {},
        "__toString": function () {},
        "__toStringMapper": function () {},
        "_root": {
          "bitmap": {},
          "get": function () {},
          "iterate": function () {},
          "nodes": {},
          "ownerID": {},
          "update": function () {}
        },
        "asImmutable": function () {},
        "asMutable": function () {},
        "butLast": function () {},
        "chain": function () {},
        "clear": function () {},
        "concat": function () {},
        "constructor": {
          "isMap": function () {},
          "of": function () {}
        },
        "contains": function () {},
        "count": function () {},
        "countBy": function () {},
        "delete": function () {},
        "deleteIn": function () {},
        "entries": function () {},
        "entrySeq": function () {},
        "equals": function () {},
        "every": function () {},
        "filter": function () {},
        "filterNot": function () {},
        "find": function () {},
        "findEntry": function () {},
        "findKey": function () {},
        "findLast": function () {},
        "findLastEntry": function () {},
        "findLastKey": function () {},
        "first": function () {},
        "flatMap": function () {},
        "flatten": function () {},
        "flip": function () {},
        "forEach": function () {},
        "fromEntrySeq": function () {},
        "get": function () {},
        "getIn": function () {},
        "groupBy": function () {},
        "has": function () {},
        "hasIn": function () {},
        "hashCode": function () {},
        "includes": function () {},
        "inspect": function () {},
        "isEmpty": function () {},
        "isSubset": function () {},
        "isSuperset": function () {},
        "join": function () {},
        "keyOf": function () {},
        "keySeq": function () {},
        "keys": function () {},
        "last": function () {},
        "lastKeyOf": function () {},
        "map": function () {},
        "mapEntries": function () {},
        "mapKeys": function () {},
        "max": function () {},
        "maxBy": function () {},
        "merge": function () {},
        "mergeDeep": function () {},
        "mergeDeepIn": function () {},
        "mergeDeepWith": function () {},
        "mergeIn": function () {},
        "mergeWith": function () {},
        "min": function () {},
        "minBy": function () {},
        "reduce": function () {},
        "reduceRight": function () {},
        "remove": function () {},
        "removeIn": function () {},
        "rest": function () {},
        "reverse": function () {},
        "set": function () {},
        "setIn": function () {},
        "size": {},
        "skip": function () {},
        "skipLast": function () {},
        "skipUntil": function () {},
        "skipWhile": function () {},
        "slice": function () {},
        "some": function () {},
        "sort": function () {},
        "sortBy": function () {},
        "take": function () {},
        "takeLast": function () {},
        "takeUntil": function () {},
        "takeWhile": function () {},
        "toArray": function () {},
        "toIndexedSeq": function () {},
        "toJS": function () {},
        "toJSON": function () {},
        "toKeyedSeq": function () {},
        "toList": function () {},
        "toMap": function () {},
        "toObject": function () {},
        "toOrderedMap": function () {},
        "toOrderedSet": function () {},
        "toSeq": function () {},
        "toSet": function () {},
        "toSetSeq": function () {},
        "toSource": function () {},
        "toStack": function () {},
        "toString": function () {},
        "update": function () {},
        "updateIn": function () {},
        "valueSeq": function () {},
        "values": function () {},
        "wasAltered": function () {},
        "withMutations": function () {}
      },
      "blockRendererFn": function () {},
      "blockStyleFn": function () {},
      "keyBindingFn": function () {},
      "readOnly": {},
      "spellCheck": {},
      "stripPastedStyles": {}
    }
  },
  "EditorBlock": function () {},
  "EditorState": {
    "acceptSelection": function () {},
    "create": function () {},
    "createEmpty": function () {},
    "createWithContent": function () {},
    "createWithText": function () {},
    "forceSelection": function () {},
    "fromJS": function () {},
    "moveFocusToEnd": function () {},
    "moveSelectionToEnd": function () {},
    "push": function () {},
    "redo": function () {},
    "set": function () {},
    "setInlineStyleOverride": function () {},
    "undo": function () {}
  },
  "Entity": {
    "__add": function () {},
    "__create": function () {},
    "__get": function () {},
    "__getAll": function () {},
    "__getLastCreatedEntityKey": function () {},
    "__loadWithEntities": function () {},
    "__mergeData": function () {},
    "__replaceData": function () {},
    "add": function () {},
    "create": function () {},
    "get": function () {},
    "getLastCreatedEntityKey": function () {},
    "mergeData": function () {},
    "replaceData": function () {}
  },
  "EntityInstance": function () {},
  "KeyBindingUtil": {
    "hasCommandModifier": function () {},
    "isCtrlKeyCommand": function () {},
    "isOptionKeyCommand": function () {},
    "isSoftNewlineEvent": function () {},
    "usesMacOSHeuristics": function () {}
  },
  "Modifier": {
    "applyEntity": function () {},
    "applyInlineStyle": function () {},
    "insertText": function () {},
    "mergeBlockData": function () {},
    "moveText": function () {},
    "removeInlineStyle": function () {},
    "removeRange": function () {},
    "replaceText": function () {},
    "replaceWithFragment": function () {},
    "setBlockData": function () {},
    "setBlockType": function () {},
    "splitBlock": function () {}
  },
  "RawDraftContentState": {},
  "RichUtils": {
    "currentBlockContainsLink": function () {},
    "getCurrentBlockType": function () {},
    "getDataObjectForLinkURL": function () {},
    "handleKeyCommand": function () {},
    "insertSoftNewline": function () {},
    "onBackspace": function () {},
    "onDelete": function () {},
    "onTab": function () {},
    "toggleBlockType": function () {},
    "toggleCode": function () {},
    "toggleInlineStyle": function () {},
    "toggleLink": function () {},
    "tryToRemoveBlockStyle": function () {}
  },
  "SelectionState": {
    "createEmpty": function () {}
  },
  "convertFromHTML": function () {},
  "convertFromRaw": function () {},
  "convertToRaw": function () {},
  "genKey": function () {},
  "getDefaultKeyBinding": function () {},
  "getVisibleSelectionRect": function () {}
};
Draft.CharacterMetadata.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "_defaultValues": function () {},
  "_keys": function () {},
  "_name": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getEntity": function () {},
  "getIn": function () {},
  "getStyle": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hasStyle": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "size": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.CharacterMetadata.EMPTY._defaultValues.style._map._list.constructor.prototype = {
  "@@__IMMUTABLE_INDEXED__@@": function () {},
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_LIST__@@": function () {},
  "@@__IMMUTABLE_ORDERED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findIndex": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastIndex": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "indexOf": function () {},
  "insert": function () {},
  "inspect": function () {},
  "interleave": function () {},
  "interpose": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastIndexOf": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "pop": function () {},
  "push": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "setSize": function () {},
  "shift": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "splice": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "unshift": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {},
  "zip": function () {},
  "zipWith": function () {}
};
Draft.CharacterMetadata.EMPTY._defaultValues.style._map._map.constructor.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "@@__IMMUTABLE_MAP__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.CharacterMetadata.EMPTY._defaultValues.style._map.constructor.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "@@__IMMUTABLE_MAP__@@": function () {},
  "@@__IMMUTABLE_ORDERED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.CharacterMetadata.EMPTY._defaultValues.style.constructor.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_ORDERED__@@": function () {},
  "@@__IMMUTABLE_SET__@@": function () {},
  "__empty": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__make": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "add": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "intersect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepWith": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "rest": function () {},
  "reverse": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "subtract": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "union": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.CharacterMetadata.EMPTY._map.constructor.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "@@__IMMUTABLE_MAP__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.CompositeDecorator.prototype = {
  "getComponentForKey": function () {},
  "getDecorations": function () {},
  "getPropsForKey": function () {}
};
Draft.ContentBlock.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntityRanges": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "findStyleRanges": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getCharacterList": function () {},
  "getData": function () {},
  "getDepth": function () {},
  "getEntityAt": function () {},
  "getIn": function () {},
  "getInlineStyleAt": function () {},
  "getKey": function () {},
  "getLength": function () {},
  "getText": function () {},
  "getType": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.ContentState.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "addEntity": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "createEntity": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getAllEntities": function () {},
  "getBlockAfter": function () {},
  "getBlockBefore": function () {},
  "getBlockForKey": function () {},
  "getBlockMap": function () {},
  "getBlocksAsArray": function () {},
  "getEntity": function () {},
  "getEntityMap": function () {},
  "getFirstBlock": function () {},
  "getIn": function () {},
  "getKeyAfter": function () {},
  "getKeyBefore": function () {},
  "getLastBlock": function () {},
  "getLastCreatedEntityKey": function () {},
  "getPlainText": function () {},
  "getSelectionAfter": function () {},
  "getSelectionBefore": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hasText": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "loadWithEntities": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeEntityData": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "replaceEntityData": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.DefaultDraftBlockRenderMap.constructor.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "@@__IMMUTABLE_MAP__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.Editor.prototype = {
  "_buildHandler": function () {},
  "_renderARIADescribedBy": function () {},
  "_renderPlaceholder": function () {},
  "_showPlaceholder": function () {},
  "componentDidMount": function () {},
  "componentDidUpdate": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "render": function () {},
  "setState": function () {}
};
Draft.Editor.defaultProps.blockRenderMap.constructor.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "@@__IMMUTABLE_MAP__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getIn": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.EditorBlock.prototype = {
  "_renderChildren": function () {},
  "componentDidMount": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "render": function () {},
  "setState": function () {},
  "shouldComponentUpdate": function () {}
};
Draft.EditorState.prototype = {
  "getAllowUndo": function () {},
  "getBlockTree": function () {},
  "getCurrentContent": function () {},
  "getCurrentInlineStyle": function () {},
  "getDecorator": function () {},
  "getDirectionMap": function () {},
  "getImmutable": function () {},
  "getInlineStyleOverride": function () {},
  "getLastChangeType": function () {},
  "getNativelyRenderedContent": function () {},
  "getRedoStack": function () {},
  "getSelection": function () {},
  "getUndoStack": function () {},
  "isInCompositionMode": function () {},
  "isSelectionAtEndOfContent": function () {},
  "isSelectionAtStartOfContent": function () {},
  "mustForceSelection": function () {},
  "toJS": function () {}
};
Draft.EntityInstance.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getData": function () {},
  "getIn": function () {},
  "getMutability": function () {},
  "getType": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
Draft.SelectionState.prototype = {
  "@@__IMMUTABLE_ITERABLE__@@": function () {},
  "@@__IMMUTABLE_KEYED__@@": function () {},
  "__ensureOwner": function () {},
  "__iterate": function () {},
  "__iterator": function () {},
  "__toJS": function () {},
  "__toString": function () {},
  "__toStringMapper": function () {},
  "asImmutable": function () {},
  "asMutable": function () {},
  "butLast": function () {},
  "chain": function () {},
  "clear": function () {},
  "concat": function () {},
  "constructor": function () {},
  "contains": function () {},
  "count": function () {},
  "countBy": function () {},
  "delete": function () {},
  "deleteIn": function () {},
  "entries": function () {},
  "entrySeq": function () {},
  "equals": function () {},
  "every": function () {},
  "filter": function () {},
  "filterNot": function () {},
  "find": function () {},
  "findEntry": function () {},
  "findKey": function () {},
  "findLast": function () {},
  "findLastEntry": function () {},
  "findLastKey": function () {},
  "first": function () {},
  "flatMap": function () {},
  "flatten": function () {},
  "flip": function () {},
  "forEach": function () {},
  "fromEntrySeq": function () {},
  "get": function () {},
  "getAnchorKey": function () {},
  "getAnchorOffset": function () {},
  "getEndKey": function () {},
  "getEndOffset": function () {},
  "getFocusKey": function () {},
  "getFocusOffset": function () {},
  "getHasFocus": function () {},
  "getIn": function () {},
  "getIsBackward": function () {},
  "getStartKey": function () {},
  "getStartOffset": function () {},
  "groupBy": function () {},
  "has": function () {},
  "hasEdgeWithin": function () {},
  "hasIn": function () {},
  "hashCode": function () {},
  "includes": function () {},
  "inspect": function () {},
  "isCollapsed": function () {},
  "isEmpty": function () {},
  "isSubset": function () {},
  "isSuperset": function () {},
  "join": function () {},
  "keyOf": function () {},
  "keySeq": function () {},
  "keys": function () {},
  "last": function () {},
  "lastKeyOf": function () {},
  "map": function () {},
  "mapEntries": function () {},
  "mapKeys": function () {},
  "max": function () {},
  "maxBy": function () {},
  "merge": function () {},
  "mergeDeep": function () {},
  "mergeDeepIn": function () {},
  "mergeDeepWith": function () {},
  "mergeIn": function () {},
  "mergeWith": function () {},
  "min": function () {},
  "minBy": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "remove": function () {},
  "removeIn": function () {},
  "rest": function () {},
  "reverse": function () {},
  "serialize": function () {},
  "set": function () {},
  "setIn": function () {},
  "skip": function () {},
  "skipLast": function () {},
  "skipUntil": function () {},
  "skipWhile": function () {},
  "slice": function () {},
  "some": function () {},
  "sort": function () {},
  "sortBy": function () {},
  "take": function () {},
  "takeLast": function () {},
  "takeUntil": function () {},
  "takeWhile": function () {},
  "toArray": function () {},
  "toIndexedSeq": function () {},
  "toJS": function () {},
  "toJSON": function () {},
  "toKeyedSeq": function () {},
  "toList": function () {},
  "toMap": function () {},
  "toObject": function () {},
  "toOrderedMap": function () {},
  "toOrderedSet": function () {},
  "toSeq": function () {},
  "toSet": function () {},
  "toSetSeq": function () {},
  "toSource": function () {},
  "toStack": function () {},
  "toString": function () {},
  "update": function () {},
  "updateIn": function () {},
  "valueSeq": function () {},
  "values": function () {},
  "wasAltered": function () {},
  "withMutations": function () {}
};
/**********************************************************************
 * End Generated Extern for Draft
/**********************************************************************/